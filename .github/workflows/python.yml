name: üêç Bindings

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test-bindings:
    strategy:
      fail-fast: false

      matrix:
        include:
          - os: ubuntu-latest
            container: ghcr.io/viennatools/vienna-builder:python
          - os: windows-latest
          - os: macos-latest

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    name: "üêç Test Bindings on ${{ matrix.os }}"

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üñ•Ô∏è Setup Environment
        uses: ./.github/actions/setup
        with:
          os: ${{ matrix.os }}

      - name: ü¶• Cache Dependencies
        uses: actions/cache@v4
        with:
          key: python-${{ matrix.os }}
          path: build

      - name: üêç Build and check Python Module (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          python -m venv venv
          ./venv/Scripts/activate.bat
          pip install .
          python -c "import viennals2d; print(viennals2d.__doc__)"

      - name: üêç Build and check Python Module (Other)
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          python -m venv venv
          ./venv/bin/pip install .
          ./venv/bin/python -c "import viennals2d; print(viennals2d.__doc__)"

      - name: üì¶ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Pre-Built (${{ matrix.os }})
          path: venv

  package:
    strategy:
      fail-fast: false

      matrix:
        include:
          - os: ubuntu-latest
            container: ghcr.io/viennatools/vienna-builder:python
          - os: windows-latest
          - os: macos-latest

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    name: "üêç Package Bindings on ${{ matrix.os }}"

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üñ•Ô∏è Setup Environment
        uses: ./.github/actions/setup
        with:
          os: ${{ matrix.os }}

      - name: üõû CIBuildWheel
        run: python -m pip install cibuildwheel==2.17.0

      - name: üõ†Ô∏è Build VTK (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          # sed -i 's/\(DVIENNALS_BUILD_PYTHON=ON"\)/\1,"-DVIENNALS_PACKAGE_PYTHON=ON"/g' pyproject.toml
          sed -i 's/\(DVIENNALS_BUILD_PYTHON=ON"\)/\1,"-DVIENNALS_PACKAGE_PYTHON=ON","-DVIENNALS_IS_CI=ON"/g' pyproject.toml
          type pyproject.toml

      - name: üõ†Ô∏è Build VTK (MacOs)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          # sed -i .bak 's/\(DVIENNALS_BUILD_PYTHON=ON"\)/\1,"-DVIENNALS_PACKAGE_PYTHON=ON"/g' pyproject.toml
          sed -i .bak 's/\(DVIENNALS_BUILD_PYTHON=ON"\)/\1,"-DVIENNALS_PACKAGE_PYTHON=ON","-DVIENNALS_IS_CI=ON"/g' pyproject.toml
          cat pyproject.toml

      - name: üõ†Ô∏è Use VTK-Python Libs
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          # sed -i 's/\(DVIENNALS_BUILD_PYTHON=ON"\)/\1,"-DVIENNALS_VTK_PYTHON_LIBS=ON"/g' pyproject.toml
          sed -i 's/\(DVIENNALS_BUILD_PYTHON=ON"\)/\1,"-DVIENNALS_PACKAGE_PYTHON=ON","-DVIENNALS_IS_CI=ON"/g' pyproject.toml
          cat pyproject.toml

      - name: üèóÔ∏è Build Wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_SKIP: "cp36-* cp37-* cp38-* cp39-*"
          CIBW_ARCHS_WINDOWS: auto64

      - name: üì¶ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

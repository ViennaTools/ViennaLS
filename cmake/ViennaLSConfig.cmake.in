@PACKAGE_INIT@

# ViennaLS requires C++17
SET(CMAKE_CXX_STANDARD "17")

###############################################
#  compiler dependent settings for ViennaLS
###############################################
if(OMP_PARALLELIZE)
  find_package(OpenMP REQUIRED)
  list(APPEND VIENNALS_LIBRARIES OpenMP::OpenMP_CXX)

  if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
    #SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fopenmp=libomp")
  elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    #SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fopenmp")
    # disable-new-dtags sets RPATH which searches for libs recursively, instead
    # of RUNPATH which does not
    # needed for g++ to link correctly
    SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--disable-new-dtags")
  elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Intel")
    #SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -qopenmp")
  elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
    #SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /openmp /wd\"4267\" /wd\"4244\"")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd\"4267\" /wd\"4244\"")
  endif()
endif()

if(ViennaLS_COMMON_TARGET)
  SET(VIENNALS_INCLUDE_DIRS "${VIENNAHRLE_INCLUDE_DIRS}" "@VIENNALS_BUILD_INCLUDE_DIRS@")
else(ViennaLS_COMMON_TARGET)
  SET(VIENNALS_INCLUDE_DIRS "${VIENNAHRLE_INCLUDE_DIRS}" "@CMAKE_INSTALL_PREFIX@@CMAKE_INSTALL_INCLUDEDIR@")
  #  include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake")
endif()

if(@VIENNALS_USE_VTK@)
  add_compile_definitions(VIENNALS_USE_VTK)
  if(NOT VTK_DIR)
    set(VTK_DIR $ENV{VTK_DIR})
  endif(NOT VTK_DIR)
  find_package(VTK QUIET)
  if(VTK_FOUND)
    #message(STATUS "Found VTK")
    add_compile_definitions(VIENNALS_USE_VTK)
    include(${VTK_USE_FILE})
    # only link needed vtk libraries for static builds
    if(VIENNALS_STATIC_BUILD)
      set(VTK_LIBRARIES vtksys;vtkIOCore;vtkexpat;vtklz4;vtkzlib;vtklzma;vtkdoubleconversion;vtkCommonMisc;vtkCommonSystem;vtkIOXML)
    endif(VIENNALS_STATIC_BUILD)
    list(APPEND VIENNALS_LIBRARIES ${VTK_LIBRARIES})
    list(APPEND VIENNALS_PYTHON_LIBRARIES ${VTK_LIBRARIES})
  else(VTK_FOUND)
    message(STATUS "No VTK install found: Building without VTK.")
  endif(VTK_FOUND)
endif()

if(@VIENNALS_BUILD_SHARED_LIBS@)
  option(VIENNALS_USE_SHARED_LIBS "Use precompiled headers" ON)
  if(VIENNALS_USE_SHARED_LIBS)
    ADD_DEFINITIONS(-DVIENNALS_USE_SHARED_LIBS)
  endif(VIENNALS_USE_SHARED_LIBS)
endif()

if(VIENNALS_USE_SHARED_LIBS)
  link_directories(@CMAKE_INSTALL_PREFIX@lib)
  list(APPEND VIENNALS_LIBRARIES @PROJECT_NAME@)
endif()

check_required_components("@PROJECT_NAME@")
